type Has {
    id: ID! @id
    resentment: Boolean!
    anger: Boolean!
}

type Trauma {
    id: ID! @id
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Toxicity {
    id: ID! @id
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Suffering {
    id: ID! @id
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}

type Defect {
    id: ID! @id
    trauma: [Trauma]
    toxicity: [Toxicity]
    suffering: [Suffering]
}

type Anger {
    id: ID! @id
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type SelfPity {
    id: ID! @id
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Fear {
    id: ID! @id
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Pride {
    id: ID! @id
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}

type Resentment {
    id: ID! @id
    anger: [Anger]
    selfPity: [SelfPity]
    fear: [Fear]
    pride: [Pride]
}

type Obsession {
    id: ID! @id
    suffering: [Suffering]
    loyalty: [Loyalty]
    honor: [Honor]
    vulnerability: [Vulnerability]
}

type Compassion {
    id: ID! @id
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Courage {
    id: ID! @id
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Acceptance {
    id: ID! @id
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Vulnerability {
    id: ID! @id
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}

type Gratitude {
    id: ID! @id
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}

type Experience {
    id: ID! @id
    compassion: [Compassion]
    courage: [Courage]
    acceptance: [Acceptance]
    vulnerability: [Vulnerability]
    gratitude: [Gratitude]
    suffering: [Suffering]
}

type Armor {
    id: ID! @id
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Boundary {
    id: ID! @id
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Loyalty {
    id: ID! @id
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Honor {
    id: ID! @id
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}

type Strength {
    id: ID! @id
    armor: [Armor]
    boundary: [Boundary]
    loyalty: [Loyalty]
    honor: [Honor]
}

type Salvation {
    id: ID! @id
    thought: String!
    character: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}

type Hope {
    id: ID! @id
    salvation: [Salvation]
}

type Inventory {
    id: ID! @id
    defect: [Defect]
    resentment: [Resentment]
    obsession: [Obsession]
    experience: [Experience]
    strength: [Strength]
    hope: [Hope]
}

type HigherPower {
    id: ID! @id
    inventory: Inventory
}
