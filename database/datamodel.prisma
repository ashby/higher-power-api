type Congregant {
    id: ID! @id
}
type Genie {
    id: ID! @id
    wish: Wish
}
type Guardian {
    id: ID! @id
    construct: Construct
}
type Martyr {
    id: ID! @id
    stigmata: Stigmata
}
type Paladin {
    id: ID! @id
    oath: Oath
}
type Seeker {
    id: ID! @id
    virtue: Virtue
}
type Self {
    id: ID! @id
    body: Body
}
type Smith {
    id: ID! @id
    shield: Shield
}
type Summoner {
    id: ID! @id
}
type Victim {
    id: ID! @id
    affliction: Affliction
}
type Volunteer {
    id: ID! @id
    act: Act
}

type Act {
    id: ID! @id
    service: Service
    support: Support
    sacrifice: Sacrifice
}
type Affliction {
    id: ID! @id
    scar: Scar
    gash: Gash
    infection: Infection
    tremor: Tremor
    nightmare: Nightmare
    delirium: Delirium
}
type Body {
    id: ID! @id
    brain: Brain
    face: Face
    mouth: Mouth
    soul: Soul
    heart: Heart
    sternum: Sternum
    gut: Gut
    skin: Skin
}
type Construct {
    id: ID! @id
    gate: Gate
    tower: Tower
    wall: Wall
}
type Oath {
    id: ID! @id
    pledge: Pledge
    campaign: Campaign
    crusade: Crusade
}
type Shield {
    id: ID! @id
    silence: Silence
    sarcasm: Sarcasm
    denial: Denial
    confusion: Confusion
}
type Stigmata {
    id: ID! @id
    nail: Nail
    crown: Crown
    cross: Cross
}
type Virtue {
    id: ID! @id
    mind: Mind
    soul: Soul
    love: Love
}
type Wish {
    id: ID! @id
    dream: Dream
}

type Brain {
    id: ID! @id
    feeling: String
    feelingId: ID
    anger: [Anger]
    fear: [Fear]
    pride: [Pride]
    selfPity: [SelfPity]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Campaign {
    id: ID! @id
    feeling: String
    feelingId: ID
    loyalty: [Loyalty]
    honor: [Honor]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Confusion {
    id: ID! @id
    feeling: String
    feelingId: ID
    armor: [Armor]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Cross {
    id: ID! @id
    feeling: String
    feelingId: ID
    suffering: [Suffering]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Crown {
    id: ID! @id
    feeling: String
    feelingId: ID
    suffering: [Suffering]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Crusade {
    id: ID! @id
    feeling: String
    feelingId: ID
    loyalty: [Loyalty]
    honor: [Honor]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Delirium {
    id: ID! @id
    feeling: String
    feelingId: ID
    trauma: [Trauma]
    toxicity: [Toxicity]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Denial {
    id: ID! @id
    feeling: String
    feelingId: ID
    armor: [Armor]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Dream {
    id: ID! @id
    feeling: String
    feelingId: ID
    salvation: [Salvation]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Face {
    id: ID! @id
    feeling: String
    feelingId: ID
    anger: [Anger]
    fear: [Fear]
    pride: [Pride]
    selfPity: [SelfPity]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Gash {
    id: ID! @id
    feeling: String
    feelingId: ID
    trauma: [Trauma]
    toxicity: [Toxicity]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Gate {
    id: ID! @id
    feeling: String
    feelingId: ID
    boundary: [Boundary]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Gut {
    id: ID! @id
    feeling: String
    feelingId: ID
    anger: [Anger]
    fear: [Fear]
    pride: [Pride]
    selfPity: [SelfPity]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Heart {
    id: ID! @id
    feeling: String
    feelingId: ID
    anger: [Anger]
    fear: [Fear]
    pride: [Pride]
    selfPity: [SelfPity]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Infection {
    id: ID! @id
    feeling: String
    feelingId: ID
    trauma: [Trauma]
    toxicity: [Toxicity]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Love {
    id: ID! @id
    feeling: String
    feelingId: ID
    vulnerability: [Vulnerability]
    acceptance: [Acceptance]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Mind {
    id: ID! @id
    feeling: String
    feelingId: ID
    vulnerability: [Vulnerability]
    acceptance: [Acceptance]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Mouth {
    id: ID! @id
    anger: [Anger]
    fear: [Fear]
    pride: [Pride]
    selfPity: [SelfPity]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Nail {
    id: ID! @id
    feeling: String
    feelingId: ID
    suffering: [Suffering]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Nightmare {
    id: ID! @id
    feeling: String
    feelingId: ID
    trauma: [Trauma]
    toxicity: [Toxicity]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Pledge {
    id: ID! @id
    feeling: String
    feelingId: ID
    loyalty: [Loyalty]
    honor: [Honor]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Sacrifice {
    id: ID! @id
    feeling: String
    feelingId: ID
    courage: [Courage]
    compassion: [Compassion]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Sarcasm {
    id: ID! @id
    feeling: String
    feelingId: ID
    armor: [Armor]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Scar {
    id: ID! @id
    feeling: String
    feelingId: ID
    trauma: [Trauma]
    toxicity: [Toxicity]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Service {
    id: ID! @id
    feeling: String
    feelingId: ID
    courage: [Courage]
    compassion: [Compassion]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Silence {
    id: ID! @id
    feeling: String
    feelingId: ID
    armor: [Armor]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Skin {
    id: ID! @id
    feeling: String
    feelingId: ID
    anger: [Anger]
    fear: [Fear]
    pride: [Pride]
    selfPity: [SelfPity]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Soul {
    id: ID! @id
    feeling: String
    feelingId: ID
    vulnerability: [Vulnerability]
    acceptance: [Acceptance]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Sternum {
    id: ID! @id
    feeling: String
    feelingId: ID
    anger: [Anger]
    fear: [Fear]
    pride: [Pride]
    selfPity: [SelfPity]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Support {
    id: ID! @id
    feeling: String
    feelingId: ID
    courage: [Courage]
    compassion: [Compassion]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Tower {
    id: ID! @id
    feeling: String
    feelingId: ID
    boundary: [Boundary]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Tremor {
    id: ID! @id
    feeling: String
    feelingId: ID
    trauma: [Trauma]
    toxicity: [Toxicity]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
type Wall {
    id: ID! @id
    feeling: String
    feelingId: ID
    boundary: [Boundary]
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}

type Defect {
    id: ID! @id
    trauma: [Trauma]
    toxicity: [Toxicity]
    suffering: [Suffering]
}
type Discontent {
    id: ID! @id
    irritability: [Irritability]
    impatience: [Impatience]
}
type Resentment {
    id: ID! @id
    anger: [Anger]
    selfPity: [SelfPity]
    fear: [Fear]
    pride: [Pride]
}
type Obsession {
    id: ID! @id
    suffering: [Suffering]
    loyalty: [Loyalty]
    honor: [Honor]
    vulnerability: [Vulnerability]
}
type Experience {
    id: ID! @id
    compassion: [Compassion]
    courage: [Courage]
    acceptance: [Acceptance]
    vulnerability: [Vulnerability]
    gratitude: [Gratitude]
    suffering: [Suffering]
}
type Strength {
    id: ID! @id
    armor: [Armor]
    boundary: [Boundary]
    loyalty: [Loyalty]
    honor: [Honor]
}
type Hope {
    id: ID! @id
    salvation: [Salvation]
    fun: [Fun]
    joy: [Joy]
}

type Trauma {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Toxicity {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Suffering {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Anger {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type SelfPity {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Fear {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Pride {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Compassion {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Courage {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Acceptance {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Vulnerability {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Gratitude {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Armor {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Boundary {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Loyalty {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Honor {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Salvation {
    id: ID! @id
    thought: String!
    character: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Fun {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}
type Joy {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}
type Irritability {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}
type Impatience {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}

type Feeling {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}

type Path {
    id: ID! @id
    defect: Defect
    discontent: Discontent
    resentment: Resentment
    obsession: Obsession
    experience: Experience
    strength: Strength
    hope: Hope
}

type Process {
    id: ID! @id
    act: Act
    affliction: Affliction
    body: Body
    construct: Construct
    oath: Oath
    shield: Shield
    stigmata: Stigmata
    virtue: Virtue
    wish: Wish
}

type Prayer {
    id: ID! @id
    process: Process
    path: Path
}

type Character {
    id: ID! @id
    congregant: Congregant
    genie: Genie
    guardian: Guardian
    martyr: Martyr
    paladin: Paladin
    seeker: Seeker
    self: Self
    smith: Smith
    summoner: Summoner
    victim: Victim
    volunteer: Volunteer
}

type Inventory {
    id: ID! @id
    defect: [Defect]
    discontent: [Discontent]
    resentment: [Resentment]
    obsession: [Obsession]
    experience: [Experience]
    strength: [Strength]
    hope: [Hope]
}

type HigherPower {
    id: ID! @id
    prayer: Prayer
    inventory: [Feeling]
    character: Character
}

