type Has {
    id: ID! @id
    defect: Boolean! @default(value: false)
    resentment: Boolean! @default(value: false)
    obsession: Boolean! @default(value: false)
    experience: Boolean! @default(value: false)
    strength: Boolean! @default(value: false)
    hope: Boolean! @default(value: false)
    acceptance: Boolean! @default(value: false)
    anger: Boolean! @default(value: false)
    armor: Boolean! @default(value: false)
    boundary: Boolean! @default(value: false)
    compassion: Boolean! @default(value: false)
    courage: Boolean! @default(value: false)
    fear: Boolean! @default(value: false)
    gratitude: Boolean! @default(value: false)
    pride: Boolean! @default(value: false)
    salvaltion: Boolean! @default(value: false)
    selfPity: Boolean! @default(value: false)
    suffering: Boolean! @default(value: false)
    toxicity: Boolean! @default(value: false)
    trauma: Boolean! @default(value: false)
    vulnerability: Boolean! @default(value: false)
}

type Congregant {
    id: ID! @id
}
type Genie {
    id: ID! @id
    wish: [Wish]
}
type Guardian {
    id: ID! @id
    construct: [Construct]
}
type Martyr {
    id: ID! @id
    stigmata: [Stigmata]
}
type Paladin {
    id: ID! @id
    oath: [Oath]
}
type Seeker {
    id: ID! @id
    virtue: [Virtue]
}
type Self {
    id: ID! @id
    body: [Body]
}
type Smith {
    id: ID! @id
    shield: [Shield]
}
type Summoner {
    id: ID! @id
}
type Victim {
    id: ID! @id
    affliction: [Affliction]
}
type Volunteer {
    id: ID! @id
    act: [Act]
}

type Act {
    id: ID!
    service: [Service]
    support: [Support]
    sacrifice: [Sacrifice]
}
type Affliction {
    id: ID!
    scar: [Scar]
    gash: [Gash]
    infection: [Infection]
    tremor: [Tremor]
    nightmare: [Nightmare]
    delirium: [Delirium]
}
type Affliction {
    id: ID!
    scar: [Scar]
    gash: [Gash]
    infection: [Infection]
    tremor: [Tremor]
    nightmare: [Nightmare]
    delirium: [Delirium]
}
type Construct {
    id: ID!
    gate: [Gate]
    tower: [Tower]
    wall: [Wall]
}
type Oath {
    id: ID!
    pledge: [Pledge]
    campaign: [Campaign]
    crusade: [Crusade]
}
type Shield {
    id: ID!
    silence: [Silence]
    sarcasm: [Sarcasm]
    denial: [Denial]
    confusion: [Confusion]
}
type Stigmata {
    id: ID!
    nail: [Nail]
    crown: [Crown]
    cross: [Cross]
}
type Stigmata {
    id: ID!
    nail: [Nail]
    crown: [Crown]
    cross: [Cross]
}

type Brain {
    id: ID!
    anger: [Anger]
    fear: [Fear]
    pride: [Pride]
    selfPity: [SelfPity]
}
type Campaign {
    id: ID!
    loyalty: [Loyalty]
    honor: [Honor]
}
type Confusion {
    id: ID!
    armor: [Armor]
}
type Cross {
    id: ID!
    suffering: [Suffering]
}
type Crown {
    id: ID!
    suffering: [Suffering]
}
type Crusade {
    id: ID!
    loyalty: [Loyalty]
    honor: [Honor]
}
type Delirium {
    id: ID!
    trauma: [Trauma]
    toxicity: [Toxicity]
}
type Denial {
    id: ID!
    armor: [Armor]
}
type Dream {
    id: ID!
    salvation: [Salvation]
}
type Face {
    id: ID!
    anger: [Anger]
    fear: [Fear]
    pride: [Pride]
    selfPity: [SelfPity]
}
type Gash {
    id: ID!
    trauma: [Trauma]
    toxicity: [Toxicity]
}
type Gate {
    id: ID!
    boundary: [Bounday]
}
type Gut {
    id: ID!
    anger: [Anger]
    fear: [Fear]
    pride: [Pride]
    selfPity: [SelfPity]
}
type Heart {
    id: ID!
    anger: [Anger]
    fear: [Fear]
    pride: [Pride]
    selfPity: [SelfPity]
}
type Infection {
    id: ID!
    trauma: [Trauma]
    toxicity: [Toxicity]
}
type Love {
    id: ID!
    vulnerability: [Vulnerability]
    acceptance: [Acceptance]
}
type Mind {
    id: ID!
    vulnerability: [Vulnerability]
    acceptance: [Acceptance]
}
type Mouth {
    id: ID!
    anger: [Anger]
    fear: [Fear]
    pride: [Pride]
    selfPity: [SelfPity]
}
type Nail {
    id: ID!
    suffering: [Suffering]
}
type Nightmare {
    id: ID!
    trauma: [Trauma]
    toxicity: [Toxicity]
}
type Pledge {
    id: ID!
    loyalty: [Loyalty]
    honor: [Honor]
}
type Sacrifice {
    id: ID!
    courage: [Courage]
    compassion: [Compassion]
}
type Sarcasm {
    id: ID!
    armor: [Armor]
}
type Scar {
    id: ID!
    trauma: [Trauma]
    toxicity: [Toxicity]
}
type Service {
    id: ID!
    courage: [Courage]
    compassion: [Compassion]
}
type Silence {
    id: ID!
    armor: [Armor]
}
type Skin {
    id: ID!
    anger: [Anger]
    fear: [Fear]
    pride: [Pride]
    selfPity: [SelfPity]
}
type Soul {
    id: ID!
    vulnerability: [Vulnerability]
    acceptance: [Acceptance]
}
type Sternum {
    id: ID!
    anger: [Anger]
    fear: [Fear]
    pride: [Pride]
    selfPity: [SelfPity]
}
type Support {
    id: ID!
    courage: [Courage]
    compassion: [Compassion]
}
type Tower {
    id: ID!
    boundary: [Bounday]
}
type Tremor {
    id: ID!
    trauma: [Trauma]
    toxicity: [Toxicity]
}
type Wall {
    id: ID!
    boundary: [boundary]
}

type Defect {
    id: ID! @id
    trauma: [Trauma]
    toxicity: [Toxicity]
    suffering: [Suffering]
}
type Resentment {
    id: ID! @id
    anger: [Anger]
    selfPity: [SelfPity]
    fear: [Fear]
    pride: [Pride]
}
type Obsession {
    id: ID! @id
    suffering: [Suffering]
    loyalty: [Loyalty]
    honor: [Honor]
    vulnerability: [Vulnerability]
}
type Experience {
    id: ID! @id
    compassion: [Compassion]
    courage: [Courage]
    acceptance: [Acceptance]
    vulnerability: [Vulnerability]
    gratitude: [Gratitude]
    suffering: [Suffering]
}
type Strength {
    id: ID! @id
    armor: [Armor]
    boundary: [Boundary]
    loyalty: [Loyalty]
    honor: [Honor]
}
type Hope {
    id: ID! @id
    salvation: [Salvation]
}

type Trauma {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Toxicity {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Suffering {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Anger {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type SelfPity {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Fear {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Pride {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Compassion {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Courage {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Acceptance {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Vulnerability {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Gratitude {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Armor {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Boundary {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Loyalty {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Honor {
    id: ID! @id
    character: String!
    thought: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}
type Salvation {
    id: ID! @id
    thought: String!
    character: String!
    source: String!
    process: String!
    path: String!
    feeling: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}

type Inventory {
    id: ID! @id
    defect: [Defect]
    resentment: [Resentment]
    obsession: [Obsession]
    experience: [Experience]
    strength: [Strength]
    hope: [Hope]
}

type HigherPower {
    id: ID! @id
    inventory: Inventory
    characters: Characters
}
