type User {
  id: ID! @id
  email: String! @unique
  password: String!
}

type Character {
    id: ID! @id
    key: String! @unique
    title: String!
    description: String
    process: String!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    userId: ID!
}

type Process {
    id: ID! @id
    key: String! @unique
    title: String!
    sources: [String]! @scalarList(strategy: RELATION)
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    userId: ID!
}

type Source {
    id: ID! @id
    key: String! @unique
    title: String!
    feelings: [String]! @scalarList(strategy: RELATION)
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    userId: ID!
}

type Path {
    id: ID! @id
    key: String! @unique
    title: String!
    feelings: [String]! @scalarList(strategy: RELATION)
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    userId: ID!
}

type Feeling {
    id: ID! @id
    key: String! @unique
    title: String!
    thoughts: [String]! @scalarList(strategy: RELATION)
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    userId: ID!
}

type Thought {
    id: ID! @id
    character: ID
    thought: String!
    quality: Boolean
    source: ID
    process: ID
    path: ID
    feeling: ID!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    prayedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
    userId: ID!
}

type Inventory {
    id: ID! @id
    paths: [InventoryPath]
}
type InventoryPath {
    id: ID! @id
    key: String!
    title: String!
    feelings: [PathFeeling]!
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updatedAt
    userId: ID!
}
type PathFeeling {
    id: ID! @id
    key: String!
    title: String!
    thoughts: [Thought]!
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updatedAt
    userId: ID!
}

type Cast {
    id: ID! @id
    characters: [CastCharacter]!
}
type CastCharacter{
    id: ID! @id
    title: String!
    description: String
    process: CharacterProcess!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    userId: ID!
}
type CharacterProcess{
    id: ID! @id
    key: String!
    title: String!
    sources: [ProcessSource]!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    userId: ID!
}
type ProcessSource{
    id: ID! @id
    key: String!
    title: String!
    feelings: [SourceFeeling]!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    userId: ID!
}
type SourceFeeling {
    id: ID! @id
    key: String
    title: String
    thoughts: [Thought]
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updatedAt
    userId: ID!
}

type HigherPower @model{
    id: ID! @id
    inventory: Inventory
    cast: Cast
}

type AuthPayload {
  token: String!
  userId: ID! @id
}