scalar DateTime

type Character {
    id: ID!
    title: String!
    description: String
    process: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type Process {
    id: ID!
    title: String!
    sources: [ID]!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type Source {
    id: ID!
    title: String!
    feelings: [ID]!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type Feeling {
    id: ID!
    title: String!
    thoughts: [ID]!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type Path {
    id: ID!
    title: String!
    feelings: [ID]!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type Thought {
    id: ID!
    character: ID
    thought: String!
    quality: Boolean
    source: ID
    process: ID
    path: ID
    feeling: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    prayedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolvedAt: DateTime
}

type Inventory {
    id: ID!
    paths: [InventoryPath]
}
type InventoryPath {
    id: ID!
    title: String!
    feelings: [InventoryFeeling]!
    createdAt: DateTime!
    updatedAt: DateTime!
}
type InventoryFeeling {
    id: ID!
    title: String!
    thoughts: [Thought]!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type Cast {
    id: ID!
    characters: [CastCharacter]!
}
type CastCharacter{
    id: ID!
    title: String!
    description: String
    process: CastProcess!
    createdAt: DateTime!
    updatedAt: DateTime!
}
type CastProcess{
    id: ID!
    title: String!
    sources: [CastSource]!
    createdAt: DateTime!
    updatedAt: DateTime!
}
type CastSource{
    id: ID!
    title: String!
    feelings: [CastFeeling]!
    createdAt: DateTime!
    updatedAt: DateTime!
}
type CastFeeling {
    id: ID!
    title: String!
    thoughts: [Thought]!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type HigherPower {
    id: ID!
    inventory: Inventory
    cast: Cast
}

