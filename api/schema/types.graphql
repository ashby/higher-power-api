scalar DateTime

type Has {
    id: ID!
    defect: Boolean!
    resentment: Boolean!
    obsession: Boolean!
    experience: Boolean!
    strength: Boolean!
    hope: Boolean!
    acceptance: Boolean!
    anger: Boolean!
    armor: Boolean!
    boundary: Boolean!
    compassion: Boolean!
    courage: Boolean!
    fear: Boolean!
    gratitude: Boolean!
    pride: Boolean!
    salvaltion: Boolean!
    selfPity: Boolean!
    suffering: Boolean!
    toxicity: Boolean!
    trauma: Boolean!
    vulnerability: Boolean!
}

type Trauma {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}
type Toxicity {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}
type Suffering {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}

type Defect {
    trauma: [Trauma]
    toxicity: [Toxicity]
    suffering: [Suffering]
}

type Anger {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}
type SelfPity {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}
type Fear {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}
type Pride {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}

type Resentment {
    anger: [Anger]
    selfPity: [SelfPity]
    fear: [Fear]
    pride: [Pride]
}

type Obsession {
    suffering: [Suffering]
    loyalty: [Loyalty]
    honor: [Honor]
    vulnerability: [Vulnerability]
}

type Compassion {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}
type Courage {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}
type Acceptance {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}
type Vulnerability {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}
type Gratitude {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}

type Experience {
    compassion: [Compassion]
    courage: [Courage]
    acceptance: [Acceptance]
    vulnerability: [Vulnerability]
    gratitude: [Gratitude]
    suffering: [Suffering]
}

type Armor {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}
type Boundary {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}
type Loyalty {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    inventory: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}
type Honor {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    inventory: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}

type Strength {
    armor: [Armor]
    boundary: [Boundary]
    loyalty: [Loyalty]
    honor: [Honor]
    anger: [Anger]
    courage: [Courage]
}

type Salvation {
    id: ID!
    character: String!
    thought: String!
    location: String!
    process: String!
    attribute: String!
    createdAt: DateTime
    updatedAt: DateTime
    sharedAt: DateTime
    amendedAt: DateTime
    resolveAt: DateTime
}

type Hope {
    salvation: [Salvation]
}

type Inventory {
    has: Has
    defect: Defect
    resentment: Resentment
    obsession: Obsession
    experience: Experience
    strength: Strength
}

type HigherPower {
    inventory: Inventory
}
