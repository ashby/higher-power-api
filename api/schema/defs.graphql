# import AuthPayload from "./types.graphql";
# import User from "./types.graphql";

# import Character from "./types.graphql";
# import Process from "./types.graphql";
# import Source from "./types.graphql";
# import Path from "./types.graphql";
# import Feeling from "./types.graphql";
# import Thought from "./types.graphql";

# import Inventory from "./types.graphql";
# import Cast from "./types.graphql";
# import HigherPower from "./types.graphql";

# import CharacterInput from "./inputs.graphql";
# import ProcessInput from "./inputs.graphql";
# import SourceInput from "./inputs.graphql";
# import PathInput from "./inputs.graphql";
# import FeelingInput from "./inputs.graphql";
# import ThoughtInput from "./inputs.graphql";

type Query {
    # user(email: String!): User

    higherPower(userId: ID!): HigherPower
    inventory(userId: ID!): Inventory
    cast(userId: ID!): Cast

    character(key: String!): Character
    characters(userId: ID!): [Character]

    process(key: String!): Process
    processes(userId: ID!): [Process]

    source(key: String!): Source
    sources(userId: ID!): [Source]

    path(key: String!): Path
    paths(userId: ID!): [Path]

    feeling(key: String!): Feeling
    feelings(userId: ID!): [Feeling]

    thought(id: ID!): Thought
    thoughts(userId: ID!): [Thought]
}

type Mutation {
    signup(email: String!, password: String!): AuthPayload
    login(email: String!, password: String!): AuthPayload

    mutateThought(data:ThoughtInput): Thought!
    mutateFeeling(data:FeelingInput): Feeling!
    mutatePath(data:PathInput): Path!
    mutateProcess(data:ProcessInput): Process!
    mutateSource(data:SourceInput): Source!
    mutateCharacter(data:CharacterInput): Character!
}
